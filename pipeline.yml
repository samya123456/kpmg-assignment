# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev-frontend-pipeline

pool:
  vmImage: ubuntu-latest

parameters:
- name: deployprod
  default: false
  type: boolean

- name: latestPackageDate 
  default: '25/02/2023' 
  type: String

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    export NODE_OPTIONS=--openssl-legacy-provider
    npm install -g @angular/cli
    npm install --save-dev @angular/cli@latest --legacy-peer-deps 
    npm cache clear --force
    ng build --configuration development --output-path ./dist/dev/cdph-pending-backlog --aot --output-hashing=all
    ng build --configuration testing --output-path ./dist/testing/cdph-pending-backlog --aot --output-hashing=all
    # ng build --configuration production --output-path ./dist/prod/cdph-pending-backlog --aot --output-hashing=all
# will zip this entire dist folder 
# push it to artifact with time stamp name dist_todaysdate(27/02/2023).zip //dist_27/02/2023.zip

#---------------------------------------------------------------------#
# if latestPackageDate is '' then latestPackageDate = todaysdate(27/02/2023)
# dist_latest.zip = dist_25/02/2023.zip //dist_25/02/2023.zip


    cd ./dist 
    ls


  displayName: 'npm install and build'

  env:
     KEY_TO_READ: www.google.com

# create task to download artifact from azure dist_latest.zip(dist_27/02/2023.zip) and unzip the dist folder with latest tag

- task: AzureWebApp@1
  condition: eq('${{ parameters.deployprod }}', 'false')
  inputs:
    azureSubscription: 'Azure Dev CI/CD'
    appType: 'webAppLinux'
    appName: 'cdph-pending-backlog-mcorp-dev'
    package: '$(System.DefaultWorkingDirectory)/**/dist/dev/cdph-pending-backlog'
    runtimeStack: 'NODE|18-lts'

# - task: AzureWebApp@1
#   condition: eq('${{ parameters.deployprod }}', 'false')
#   inputs:
#     azureSubscription: 'Azure Test CI/CD'
#     appType: 'webAppLinux'
#     appName: 'cdph-pending-backlog-mcorp-dev'
#     package: '$(System.DefaultWorkingDirectory)/**/dist/testing/cdph-pending-backlog'
#     runtimeStack: 'NODE|18-lts'

# - task: AzureWebApp@1
#   condition: eq('${{ parameters.deployprod }}', 'true')
#   inputs:
#     azureSubscription: 'Azure Prod CI/CD'
#     appType: 'webAppLinux'
#     appName: 'cdph-pending-backlog-mcorp-dev'
#     package: '$(System.DefaultWorkingDirectory)/**/dist/prod/cdph-pending-backlog'
#     runtimeStack: 'NODE|18-lts'